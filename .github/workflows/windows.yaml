name: Windows build
on:
  push:
  pull_request:
  workflow_dispatch:
######################
###### Windows #######
######################

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    env:
      VCINSTALLDIR: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC'
      QT_VERSION: 5.15.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      # Append PR number to .version
      - name: Append PR number to version
        shell: bash
        run: |
          tr -d '\n' < .version > temp && mv temp .version
          echo -n "+PR${{ github.event.pull_request.number }}" >> .version

      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v3
        env:
          cache-name: cache-vcpkg
        with:
          path: vcpkg
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
        name: Checkout vcpkg
        uses: actions/checkout@v3
        with:
          repository: Microsoft/vcpkg
          path: vcpkg
          submodules: true

      - name: Set up vcpkg environment
        shell: cmd
        run: .\vcpkg\bootstrap-vcpkg.bat

      - name: vcpkg install libftdi
        shell: cmd
        working-directory: vcpkg
        run: .\vcpkg install libftdi1

      - name: vcpkg integrate install
        shell: cmd
        working-directory: vcpkg
        run: .\vcpkg integrate install

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{env.QT_VERSION}}
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          cache: 'true'
          cache-key-prefix: 'cache-qt-windows'

      - name: Cache Chocolatey downloads
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-chocolatey

#      - name: Install Python
#        shell: powershell
#        run: |
#          choco install --no-progress python -y

      - name: Install Perl
        shell: powershell
        run: |
          choco install --no-progress strawberryperl -y
          echo "C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin" >> $GITHUB_PATH

      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -sL https://git.io/cpm | perl - install -g --show-build-log-on-failure

      - name: Install OpenSSL, DirectX SDK
        shell: powershell
        run: |
          choco install --no-progress openssl directx-sdk -y

      - name: Install libjpeg-turbo
        run: |
          Invoke-WebRequest https://netcologne.dl.sourceforge.net/project/libjpeg-turbo/2.0.6/libjpeg-turbo-2.0.6-vc64.exe -OutFile libjpeg-turbo.exe -UserAgent NativeHost
          .\libjpeg-turbo /S

      - name: Set up x64 build architecture environment
        shell: cmd
        run: call "${{env.VCINSTALLDIR}}\Auxiliary\Build\vcvars64.bat"

      # Build packages
      - name: Build packages
        env:
          PLATFORM: windows
        shell: bash
        run: ./.ci/ci_build.sh

      # Collecting deployable artifacts
      - name: Collecting deployable artifacts
        shell: bash
        run: |
          mkdir -p windows
          mv build/*.exe windows

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: windows
